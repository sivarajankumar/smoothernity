def setup ( lexer ) :
    lexer . set_eol_token ( 'eol' )
    lexer . set_eof_token ( 'eof' )
    lexer . set_indent_tokens ( 'indent' , 'dedent' )
    lexer . set_token_patterns (
        [ ( 'keyword' , r'\b(copy|paste|replace)\b' )
        , ( 'keyword' , r'\b(consts|types|messages|trace|stateless|vars)\b' )
        , ( 'keyword' , r'\b(module|module_queue|module_name)\b' )
        , ( 'keyword' , r'\b(system|machine|state|input|entry|exit)\b' )
        , ( 'keyword' , r'\b(command|discard|on|to|is|do|initial)\b' )
        , ( 'keyword' , r'\b(init|done)\b' )
        , ( 'keyword' , r'\b(proc|args|ops)\b' )
        , ( 'keyword' , r'\b(if|elif|else|any|all|while)\b' )
        , ( 'keyword' , r'\b(receive|request|reply|send)\b' )
        , ( 'keyword' , r'\b(with)\b' )
        , ( 'underscore' , r'_' )
        , ( 'curly_open' , r'{' )
        , ( 'curly_close' , r'}' )
        , ( 'paren_open' , r'\(' )
        , ( 'paren_close' , r'\)' )
        , ( 'left_arrow' , r'<-' )
        , ( 'right_arrow' , r'->' )
        , ( 'number_fract' , r'-? *[0-9]+ *\/ *[0-9]+' )
        , ( 'number_whole' , r'-? *[0-9]+' )
        , ( 'number_whole' , r'true|false' )
        , ( 'string' , r"'[^']*'" )
        , ( 'expression' , r'\[[^\]]*\]' )
        , ( 'id' , r'[a-z][a-z0-9_]*' ) ] )
