from antlr3 import ANTLRInputStream , CommonTokenStream , RecognitionException
from antlr3 . tree import CommonTreeNodeStream
from antlr3 . constants import EOF
from autogenerated . ShyCopypasterBackend import ShyCopypasterBackend
from autogenerated . ShyCopypasterFrontend import ShyCopypasterFrontend
from autogenerated . ShyLexer import ShyLexer , ShyLexerException

class exception ( Exception ) :
    def __init__ ( self , text ) :
        Exception . __init__ ( self , text )

class copypaster :
    def run ( self , input ) :
        return self . _read ( input )
    def _read ( self , input ) :
        sl = ShyLexer ( ANTLRInputStream ( input ) )
        ts = CommonTokenStream ( sl )
        scf = ShyCopypasterFrontend ( ts )
        try :
            t = scf . start ( ) . tree
        except ShyLexerException as e :
            raise exception ( str ( e ) )
        if t == None :
            return { }
        else :
            scb = ShyCopypasterBackend ( CommonTreeNodeStream ( t ) )
            return scb . start ( )
