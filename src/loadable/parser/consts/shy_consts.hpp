const so_called_lib_std_char shy_loadable_parser_consts :: brace_close = '}' ;
const so_called_lib_std_char shy_loadable_parser_consts :: brace_open = '{' ;
const so_called_lib_std_string shy_loadable_parser_consts :: command = "command" ;
const so_called_lib_std_string shy_loadable_parser_consts :: consts = "consts" ;
const so_called_lib_std_string shy_loadable_parser_consts :: discard = "discard" ;
const so_called_lib_std_char shy_loadable_parser_consts :: divide = '/' ;
const so_called_lib_std_string shy_loadable_parser_consts :: do_token = "do" ;
const so_called_lib_std_string shy_loadable_parser_consts :: entry = "entry" ;
const so_called_lib_std_string shy_loadable_parser_consts :: exit = "exit" ;
const so_called_lib_std_string shy_loadable_parser_consts :: if_token = "if" ;
const so_called_lib_std_string shy_loadable_parser_consts :: is = "is" ;
const so_called_lib_std_string shy_loadable_parser_consts :: machine = "machine" ;
const so_called_lib_std_char shy_loadable_parser_consts :: minus = '-' ;
const so_called_lib_std_string shy_loadable_parser_consts :: on = "on" ;
const so_called_lib_std_char shy_loadable_parser_consts :: parenthesis_close = ')' ;
const so_called_lib_std_char shy_loadable_parser_consts :: parenthesis_open = '(' ;
const so_called_lib_std_string shy_loadable_parser_consts :: state = "state" ;
const so_called_lib_std_string shy_loadable_parser_consts :: system = "system" ;
const so_called_lib_std_char shy_loadable_parser_consts :: terminator = '#' ;
const so_called_lib_std_string shy_loadable_parser_consts :: to = "to" ;
const so_called_lib_std_char shy_loadable_parser_consts :: underscore = '_' ;
