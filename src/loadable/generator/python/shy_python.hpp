void shy_loadable_generator_python :: main_script ( so_called_lib_std_string & result , so_called_lib_std_string logic )
{
    result . clear ( ) ;
    result += "# autogenerated file begin\n" ;
    result += "# for python 2.5\n" ;
    result += "\n" ;
    result += "import md5\n" ;
    result += "import os\n" ;
    result += "import os . path\n" ;
    result += "\n" ;
    result += "def generate_file ( path , contents ) :\n" ;
    result += "    dir = os . path . dirname ( path )\n" ;
    result += "    try :\n" ;
    result += "        os . makedirs ( dir )\n" ;
    result += "        print 'Path \"%s\" created.' % dir\n" ;
    result += "    except :\n" ;
    result += "        pass\n" ;
    result += "    old_md5 = str ( )\n" ;
    result += "    new_md5 = md5 . md5 ( contents ) . hexdigest ( )\n" ;
    result += "    try :\n" ;
    result += "        old_md5 = md5 . md5 ( open ( path , 'r' ) . read ( ) ) . hexdigest ( )\n" ;
    result += "    except :\n" ;
    result += "        pass\n" ;
    result += "    if old_md5 != new_md5 :\n" ;
    result += "        try :\n" ;
    result += "            open ( path , 'w' ) . write ( contents )\n" ;
    result += "            print 'File \"%s\" generated.' % path\n" ;
    result += "        except IOError ( error ) :\n" ;
    result += "            print 'Error occured at writing to file \"%s\": %s' % ( path , error )\n" ;
    result += "    else :\n " ;
    result += "        print 'File \"%s\" is up to date.' % path\n" ;
    result += "\n" ;
    result += "print 'Generating script started.'\n" ;
    result += "print str ( )\n" ;
    result += "\n" ;
    result += logic ;
    result += "print str ( )\n" ;
    result += "print 'Generating script finished.'\n" ;
    result += "\n" ;
    result += "# autogenerated file end\n" ;
}

void shy_loadable_generator_python :: generate_file ( so_called_lib_std_string & result , so_called_lib_std_string path , so_called_lib_std_string contents )
{
    result . clear ( ) ;
    result += "generate_file ( '" ;
    result += path ;
    result += "' , '''// autogenerated file begin\n" ;
    result += "\n" ;
    result += contents ;
    result += "\n" ;
    result += "// autogenerated file end\n" ;
    result += "''' )\n" ;
    result += "\n" ;
}

