template < typename _data_modules >
class shy_data_generator_types
{
public :
    typedef _data_modules data_modules ;
} ;

template < typename data_generator_types >
class shy_data_generator
{
    typedef typename data_generator_types :: data_modules data_modules ;
public :
    shy_data_generator ( ) ;
    void set_modules ( data_modules & ) ;
    std :: string generate ( ) ;
private :
    data_modules * _modules ;
} ;

template < typename data_generator_types >
shy_data_generator < data_generator_types > :: shy_data_generator ( )
: _modules ( 0 )
{
}

template < typename data_generator_types >
void shy_data_generator < data_generator_types > :: set_modules ( data_modules & modules )
{
    _modules = & modules ;
}

template < typename data_generator_types >
std :: string shy_data_generator < data_generator_types > :: generate ( )
{
    return "autogenerated c++ code" ;
}

